pipeline {
  agent {
    docker {
      image 'node:20-slim'
      args  '-u root'            // run as root so writing cache is fine
    }
  }
  options {
    timestamps()                 // show per-line timestamps
    timeout(time: 25, unit: 'MINUTES')
    skipDefaultCheckout()
  }
  environment {
    NPM_CONFIG_CACHE = "${WORKSPACE}/.npm-cache"
  }

  stages {
    stage('Checkout') {
      steps {
        cleanWs()
        checkout scm
      }
    }

    stage('Setup Cache & Install') {
      steps {
        sh '''
          # write local .npmrc so npm never touches /etc
          echo "cache=${NPM_CONFIG_CACHE}" > .npmrc

          # install into workspace cache
          npm ci
        '''
      }
    }

    stage('Build') {
      steps {
        // wrap in `time` so you see exactly how long it takes
        sh 'time npm run build'
      }
    }

    stage('Dockerize & Deploy') {
      steps {
        sh '''
          docker build -t vite-app .
          docker rm -f vite-app || true
          docker run -d --name vite-app -p 5173:80 vite-app
        '''
      }
    }
  }

  post {
    always { sh 'docker image prune -f' }
    success { echo "✅ Done in $BUILD_DURATION" }
    failure { echo "❌ Failed—see logs above." }
  }
}
