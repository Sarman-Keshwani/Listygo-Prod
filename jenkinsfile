pipeline {
  agent any

  options {
    timeout(time: 15, unit: 'MINUTES')
    preserveStashes(buildCount: 5)
    skipDefaultCheckout()
  }

  stages {
    stage('Clean & Checkout') {
      steps {
        cleanWs()
        git url: 'https://github.com/Sarman-Keshwani/Listygo-Prod.git', branch: 'main'
      }
    }

    stage('Build Frontend') {
      steps {
        // Build inside a Node container with unlimited memory + 4 GB heap
        sh '''
          docker run --rm \
            --memory 0 \
            -e NODE_OPTIONS="--max-old-space-size=4096" \
            -v "$PWD":/app \
            -w /app \
            node:20-slim \
            sh -c "npm install && npm run build"
        '''
        stash name: 'frontend-dist', includes: 'dist/**'
      }
    }

    stage('Build Static Image') {
      steps {
        unstash 'frontend-dist'
        sh '''
          # Create a minimal Dockerfile_serving static files
          cat > Dockerfile.static << 'EOF'
          FROM nginx:stable-alpine
          COPY dist/ /usr/share/nginx/html
          COPY nginx.conf /etc/nginx/conf.d/default.conf
          EXPOSE 80
          HEALTHCHECK --interval=30s --timeout=3s \\
            CMD wget -q -O /dev/null http://localhost/ || exit 1
          EOF

          docker build -f Dockerfile.static -t home-frontend-static .
        '''
      }
    }

    stage('Deploy') {
      steps {
        sh '''
          docker rm -f home-frontend-1 || true
          docker run -d \
            --name home-frontend-1 \
            -p 5173:80 \
            home-frontend-static
        '''
      }
    }
  }

  post {
    success {
      echo '✅ Frontend built & deployed in <2min!'
    }
    failure {
      echo '❌ Frontend build or deploy failed—check logs above.'
    }
  }
}
