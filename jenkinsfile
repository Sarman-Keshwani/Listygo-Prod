pipeline {
  agent any

  // force npm to use a cache folder we own
  environment {
    NPM_CONFIG_CACHE = "${WORKSPACE}/.npm-cache"
  }

  options {
    skipDefaultCheckout()
    timeout(time: 20, unit: 'MINUTES')
  }

  stages {
    stage('Clean & Checkout') {
      steps {
        cleanWs()
        checkout scm
      }
    }

    stage('Install & Build') {
      steps {
        sh '''
          # point npm cache inside the workspace to avoid root-owned files
          npm config set cache "$NPM_CONFIG_CACHE" --global

          # install and build
          npm ci
          npm run build
        '''
      }
    }

    stage('Docker Build & Deploy') {
      steps {
        sh '''
          # Build an image called vite-app
          docker build -t vite-app .

          # Replace any old container
          docker rm -f vite-app || true

          # Run it, mapping container’s port 80 → host 5173
          docker run -d --name vite-app -p 5173:80 vite-app
        '''
      }
    }
  }

  post {
    success {
      echo "✅ Vite app built & deployed successfully!"
    }
    failure {
      echo "❌ Build or deploy failed—see errors above."
    }
    always {
      // clean up dangling images to free space
      sh 'docker image prune -f'
    }
  }
}
