pipeline {
  agent any

  options {
    timeout(time: 25, unit: 'MINUTES')
    preserveStashes(buildCount: 5)
    skipDefaultCheckout()
  }

  stages {
    stage('Clean & Checkout') {
      steps {
        cleanWs()
        git url: 'https://github.com/Sarman-Keshwani/Listygo-Prod.git', branch: 'main'
      }
    }

    stage('Build Frontend') {
      steps {
        // Use Docker to run Node.js commands
        sh '''
          # Write Vite config to file
          cat > vite.config.production.js << 'EOF'
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

export default defineConfig({
  plugins: [react()],
  build: {
    target: 'es2015',
    chunkSizeWarningLimit: 2000,
    sourcemap: false,
    minify: 'esbuild',
    rollupOptions: {
      output: {
        manualChunks(id) {
          if (id.includes('node_modules')) {
            if (id.includes('react')) return 'react-vendor';
            if (id.includes('@ant-design')) return 'antd-vendor';
            return 'vendor';
          }
        }
      }
    }
  }
})
EOF

          # Run build in Docker container
          docker run --rm -v "$(pwd):/app" -w /app node:20-slim sh -c "export NODE_OPTIONS='--max-old-space-size=8192' && npm install --legacy-peer-deps && npm run build -- --config vite.config.production.js"
        '''
        stash name: 'frontend-dist', includes: 'dist/**'
      }
    }

    stage('Build Static Image') {
      steps {
        unstash 'frontend-dist'
        sh 'docker build -t home-frontend .'
      }
    }

    stage('Deploy') {
      steps {
        sh '''
          docker stop home-frontend-container || true
          docker rm home-frontend-container || true
          docker run -d --name home-frontend-container -p 5173:80 home-frontend
        '''
      }
    }
  }

  post {
    success {
      echo '✅ Frontend built & deployed successfully!'
    }
    failure {
      echo '❌ Frontend build or deploy failed—check logs above.'
    }
  }
}
