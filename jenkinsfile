pipeline {
  agent any

  options {
    timeout(time: 15, unit: 'MINUTES')
    preserveStashes(buildCount: 5)
    skipDefaultCheckout()
  }

  stages {
    stage('Clean Workspace') {
      steps {
        // Force-clean old workspace
        script {
          try {
            cleanWs()
          } catch (e) {
            echo "⚠️ cleanWs failed, proceeding anyway: ${e}"
          }
        }
      }
    }

    stage('Checkout') {
      steps {
        git url: 'https://github.com/Sarman-Keshwani/Listygo-Prod.git', branch: 'main'
      }
    }

    stage('Build Frontend') {
      // Use a Node container to run npm
      agent {
        docker { 
          image 'node:20-slim'
          args  '--user root' 
        }
      }
      steps {
        sh '''
          npm ci
          npm run build
        '''
      }
      post {
        success {
          stash name: 'frontend-dist', includes: 'dist/**'
        }
      }
    }

    stage('Deploy Static via Nginx') {
      agent { label 'docker' } // back on a docker-capable agent
      steps {
        unstash 'frontend-dist'
        sh '''
          # Remove any previous container on 5173
          docker rm -f home-frontend-1 || true

          # Run Nginx, mounting dist/ as read-only
          docker run -d \
            --name home-frontend-1 \
            -p 5173:80 \
            -v "$PWD/dist":/usr/share/nginx/html:ro \
            nginx:stable-alpine
        '''
      }
    }
  }

  post {
    success {
      echo '✅ Frontend built & deployed in <1min!'
    }
    failure {
      echo '❌ Frontend build or deploy failed—check logs above.'
    }
  }
}
